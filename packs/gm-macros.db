{"name":"Show Token","type":"script","author":"6cxUP4dSannVjU9o","img":"icons/svg/invisible.svg","scope":"global","command":"// Obt√©n los tokens seleccionados\nlet tokens = canvas.tokens.controlled;\n// Verifica que haya tokens seleccionados\nif (tokens.length === 0) {\n  ui.notifications.warn(\"Selecciona uno o m√°s tokens para mostrar/ocultar.\");\n} else {\n  // Alterna el estado de oculto de cada token\n  for (let token of tokens) {\n    let isHidden = token.document.hidden;\n    await token.document.update({hidden: !isHidden});\n  }\n}","folder":null,"sort":0,"ownership":{"default":0},"flags":{"exportSource":{"world":"vinculosyjur-69b5b203","system":"cosmere-rpg","coreVersion":"12.343","systemVersion":"1.0.1"}},"_id":"87gGNbW3oGPdYImJ"}
{"name":"Incrementar Foco","type":"script","author":"6cxUP4dSannVjU9o","img":"icons/skills/targeting/crosshair-bars-yellow.webp","scope":"global","command":"// Valor a modificar (+4 para sumar, -4 para restar)\nconst delta = 1;\n\n// Verifica que hay un token seleccionado\nconst token = canvas.tokens.controlled[0];\nif (!token) {\n  ui.notifications.warn(\"Debes seleccionar un token.\");\n  return;\n}\n\nconst actor = token.actor;\n\n// Salud actual y m√°xima\nconst currHP = actor.system.resources.foc.value;\nconst maxHP = actor.system.resources.foc.max.value; // Si usas el override como m√°ximo\n\n// Calcula nueva salud\nconst newHP = Math.min(Math.max(currHP + delta, 0), maxHP);\n\n// Actualiza el valor de salud\nactor.update({ \"system.resources.foc.value\": newHP });\n\nui.notifications.info(`Foco actualizado a ${newHP}.`);\n\n\nnew Sequence()\n    .effect()\n        .file(\"jb2a.aura_themed\")\n        .atLocation(canvas.tokens.controlled[0])\n        .scaleToObject(3)\n        .belowTokens()\n        .fadeIn(1500, {ease: \"easeOutCubic\", delay: 50})\n        .fadeOut(1500)\n        .rotateIn(90, 2500, {ease: \"easeInOutCubic\"})\n        .rotateOut(350, 1500, {ease: \"easeInCubic\"})\n        .scaleIn(2, 2500, {ease: \"easeInOutCubic\"})\n        .scaleOut(0, 1500, {ease: \"easeInCubic\"})\n    .play()","folder":null,"sort":0,"ownership":{"default":0},"flags":{},"_id":"8UNPEwp2pTovSVEy"}
{"name":"Critical Miss animation","type":"script","author":"6cxUP4dSannVjU9o","img":"icons/svg/dice-target.svg","scope":"global","command":"const center = {\n  x: canvas.scene.width / 2,\n  y: canvas.scene.height / 2\n};\n\nnew Sequence()\n    .effect()\n        .file(\"modules/JB2A_DnD5e/Library/Generic/UI/CriticalMiss_03_Red_200x200.webm\")\n        .atLocation(center).scale(5)\n    .play()","folder":null,"sort":0,"ownership":{"default":0},"flags":{},"_id":"9MDhU9WMv0QKYH3D"}
{"name":"Strike Hammer","type":"script","author":"6cxUP4dSannVjU9o","img":"modules/JB2A_DnD5e/Library/Generic/Weapon_Attacks/Melee/Hammer01_01_Regular_White_Thumb.webp","scope":"global","command":"let selectedToken = canvas.tokens.controlled[0]; // First selected token\nlet targets = Array.from(game.user.targets); // Array of targeted tokens\n\nfor(let target of targets){\n/*new Sequence()\n    .effect()\n        .atLocation(selectedToken)\n        .stretchTo(target)\n        .file(\"jb2a.unarmed_strike.physical.02.blue\")\n        .repeats(3, 200, 300)\n        .randomizeMirrorY()\n    .play();*/\n\n\nnew Sequence()\n    .effect()\n        .file(\"jb2a.hammer.melee.01.white\") //Replace the text between quotation marks.\n        .atLocation(selectedToken)\n        .stretchTo(target)  \n        .repeats(3, 200, 300)\n        .randomizeMirrorY()\n.delay(1000)\n    \n    .play();\n}","folder":null,"sort":0,"ownership":{"default":0},"flags":{},"_id":"A6ksZ4rFKvgMdzd0"}
{"name":"Weapon Throw with Return","type":"script","author":"6cxUP4dSannVjU9o","img":"modules/JB2A_DnD5e/Library/Generic/Weapon_Attacks/Ranged/Dagger01_01_Regular_White_Return_Thumb.webp","scope":"global","command":"/*\n#########################################################################################\n   This macro needs the Sequencer module to work.\n   Also, you need to target at least one token and select the token throwing the weapon\n#########################################################################################\n*/\n//You can find the documentation for Sequencer on Github : https://github.com/fantasycalendar/FoundryVTT-Sequencer/wiki\n\nlet targets = Array.from(game.user.targets);\n\nfor(let target of targets){\n    new Sequence()\n        .effect()\n    //First it will play the throw sequence of the Dagger01 animation.\n            .file(\"jb2a.dagger.throw.01.white\")\n            .atLocation(token)\n            .stretchTo(target)\n            //OPTIONAL\n            //You can adjust the value below to play the return part before or after the throwing animation ends.\n            //The current value should make the transition seamless or barely noticeable.\n            //A negative value will play the return part before the throwing animation ends. And a positive value will add a pause between the throw and the return animation. \n            .waitUntilFinished(-700) //In milliseconds  \n        .effect()\n    //Then it will transition to the return animation of the Dagger01.\n            .file(\"jb2a.dagger.return.01.white\")\n            .atLocation(token)\n            .stretchTo(target)\n    .play()\n}","folder":null,"sort":0,"ownership":{"default":0},"flags":{"core":{"sourceId":"Macro.kSfIaywHwfY3sKXI"},"advanced-macros":{"runForSpecificUser":""}},"_id":"D8DqP5B4iB75DPEG"}
{"name":"Spreen flight","type":"script","author":"6cxUP4dSannVjU9o","img":"icons/svg/dice-target.svg","scope":"global","command":"const center = {\n  x: (canvas.scene.width / 4) *3,\n  y: (canvas.scene.height / 8) * 8\n};\n\nnew Sequence()\n    .effect()\n        .file(\"jb2a.markers.light_orb.complete.blue\")\n        .atLocation(center)\n    .play()","folder":null,"sort":0,"ownership":{"default":0},"flags":{},"_id":"J43Gdv2F7hL20Pjd"}
{"name":"Hook 20 Natural","type":"script","author":"6cxUP4dSannVjU9o","img":"icons/svg/dice-target.svg","scope":"global","command":"Hooks.on(\"diceSoNiceRollComplete\", (messageId) => {\n  const msg = game.messages.get(messageId);\n  if (!msg?.isRoll) return;\n\n  // Analiza todos los rolls del mensaje\n  for (const roll of msg.rolls) {\n    // Filtra solo dados (terms) de tipo Die\n    for (const term of roll.terms) {\n      if (term instanceof Die && term.faces === 20) { // Solo d20\n        for (const result of term.results) {\n          if (result.result === 20) {\n            // Aqu√≠ va tu reacci√≥n: animaci√≥n, efecto, etc\n            ui.notifications.info(\"¬°Wow, un 20 natural! üé≤\");\n            \nconst center = {\n  x: canvas.scene.width / 2,\n  y: canvas.scene.height / 2\n};\n\nnew Sequence()\n    .effect()\n        .file(\"modules/JB2A_DnD5e/Library/1st_Level/Thunderwave/Thunderwave_01_Bright_Blue_Center_600x600.webm\")\n        .atLocation(center).scale(5)\n    .play()\n            return; // Sale al detectar el primero\n          }\n        }\n      }\n    }\n  }\n});","folder":null,"sort":0,"ownership":{"default":0},"flags":{},"_id":"JftnYfOMuXevgcjV"}
{"name":"Incrementar Salud","type":"script","author":"6cxUP4dSannVjU9o","img":"icons/svg/heal.svg","scope":"global","command":"// Valor a modificar (+4 para sumar, -4 para restar)\nconst delta = 1;\n\n// Verifica que hay un token seleccionado\nconst token = canvas.tokens.controlled[0];\nif (!token) {\n  ui.notifications.warn(\"Debes seleccionar un token.\");\n  return;\n}\n\nconst actor = token.actor;\n\n// Salud actual y m√°xima\nconst currHP = actor.system.resources.hea.value;\n\n\nconst maxHP = actor.system.resources.hea.max.value; // Si usas el override como m√°ximo\n\n// Calcula nueva salud\nconst newHP = Math.min(Math.max(currHP + delta, 0), maxHP);\n\n// Actualiza el valor de salud\nactor.update({ \"system.resources.hea.value\": newHP });\n\nui.notifications.info(`Salud actualizada a ${newHP}.`);\n\nnew Sequence()\n    .effect()\n        .file(\"modules/JB2A_DnD5e/Library/Generic/Healing/HealingAbility_02_Regular_GreenOrange_Loop_600x600.webm\")\n        .atLocation(canvas.tokens.controlled[0])\n        .scaleToObject(3)\n        .belowTokens()\n        .fadeIn(1500, {ease: \"easeOutCubic\", delay: 50})\n        .fadeOut(1500)\n        .rotateIn(90, 2500, {ease: \"easeInOutCubic\"})\n        .rotateOut(350, 1500, {ease: \"easeInCubic\"})\n        .scaleIn(2, 2500, {ease: \"easeInOutCubic\"})\n        .scaleOut(0, 1500, {ease: \"easeInCubic\"})\n    .play()","folder":null,"sort":0,"ownership":{"default":0},"flags":{},"_id":"Llo5ZpODs3yEeKhS"}
{"name":"Bomb Throw","type":"script","author":"6cxUP4dSannVjU9o","img":"modules/JB2A_DnD5e/Library/Generic/Weapon_Attacks/Ranged/ThrowBomb01_01_Regular_Black_Thumb.webp","scope":"global","command":"/*\n####################################################\n   This macro needs the Sequencer module to work.\n   Also, you need to target at least one token and select the one who will throw the bomb.\n####################################################\n*/\n\n// Let's create a function with arguments. That means that we can call this function later and define each argument (here they're called dbThrow, dbFracture and dbExplosion);\n// If you look at the end of the macro, we're using each arg to call a specific Database path. (i.e: await grenade('dbPath01', 'dbPath02', 'dbPath03'))\nasync function bombAnimation(dbThrow, dbFracture, dbExplosion, dbGroundImpact){\n    let source = token; // this is the first selected token\n    let targets = Array.from(game.user.targets); // This is an array that will contain all targeted tokens (we need at least one to know where to throw the potion or grenade)\n        for(let target of targets){ // The for loop will iterate for each target, if more than one token is targeted. Otherwise it will run it only once\n        new Sequence()\n        .effect() \n            .file(dbThrow)\n            .atLocation(source)\n            .stretchTo(target)\n            .waitUntilFinished(-150)\n        .effect()\n            .file(dbFracture)\n            .atLocation(target)\n            .scaleToObject(1.2) \n        .effect()\n            .file(dbExplosion)\n            .atLocation(target)\n        .effect()\n            .file(dbGroundImpact)\n            .atLocation(target)\n            .belowTokens()\n            .scaleToObject(2)\n            .scaleIn(0.1, 100, {ease: \"easeOutExpo\"})\n            .duration(5000)\n            .fadeOut(3250, {ease: \"easeInSine\"})    \n        .play();\n        \n        let delay = Sequencer.Helpers.random_int_between(600, 1000) // neat little helper from Sequencer giving us a whole number between two values\n        await Sequencer.Helpers.wait(delay) // another helper that allows us to delay the time between each loop (when we have more than one target)\n        \n        }\n    }\nawait bombAnimation('jb2a.throwable.throw.bomb.01.black','jb2a.explosion.shrapnel.bomb.01.black','jb2a.explosion.08.orange','jb2a.impact.ground_crack.orange');","folder":null,"sort":0,"ownership":{"default":0},"flags":{"core":{"sourceId":"Macro.nvEzRX1QqW2iReIg"},"advanced-macros":{"runForSpecificUser":""}},"_id":"N7CyEcZGTFRrGeKr"}
{"name":"Pedir Tirada","type":"script","author":"6cxUP4dSannVjU9o","img":"icons/svg/d20-highlight.svg","scope":"global","command":"const OWNER_PERMISSION_LEVEL = 3;\n\n// Habilidades mapeadas seg√∫n tus im√°genes\nconst habilidades = {\n  \"agi\": \"Agilidad\",\n  \"ath\": \"Atletismo\",\n  \"hwp\": \"Armas Pesadas\",\n  \"lwp\": \"Armas Ligeras\",\n  \"stl\": \"Sigilo\",\n  \"thv\": \"Hurto/Thievery\",\n  \"cra\": \"Artesan√≠a/Crafting/Manufactura\",\n  \"ded\": \"Deducci√≥n\",\n  \"dis\": \"Disciplina\",\n  \"inm\": \"Intimidaci√≥n\",\n  \"lor\": \"Saber\",\n  \"med\": \"Medicina\",\n  \"dec\": \"Enga√±o\",\n  \"ins\": \"Perspicacia\",\n  \"lea\": \"Liderazgo\",\n  \"prc\": \"Percepci√≥n\",\n  \"prs\": \"Persuasi√≥n\",\n  \"sur\": \"Supervivencia\"\n};\n\n// --- DEBUG OPCIONAL ---\n// Descomenta si quieres ver debug en el chat del GM\n/*\nfunction debug(msg) {\n  ChatMessage.create({\n    content: `<b>[DEBUG]</b> ${msg}`,\n    whisper: [game.user.id]\n  });\n}\n*/\n\n// Paso 1: elegir actor\nlet actoresConDue√±oArr = game.actors.filter(a => a.hasPlayerOwner);\nif(actoresConDue√±oArr.length === 0) {\n  ui.notifications.warn(\"No hay personajes controlados por jugadores en la partida.\");\n  return;\n}\n\nlet actoresOptions = actoresConDue√±oArr.map(a => `<option value=\"${a.id}\">${a.name}</option>`).join(\"\");\n\n// Paso 2: mostrar di√°logo inicial para seleccionar actor\nnew Dialog({\n  title: \"Selecciona personaje\",\n  content: `<p><b>Selecciona el personaje:</b></p>\n            <select id=\"actor\">${actoresOptions}</select>`,\n  buttons: {\n    siguiente: {\n      label: \"Siguiente\",\n      callback: async html => {\n        const actorId = html.find(\"#actor\").val();\n        const actor = game.actors.get(actorId);\n        if (!actor) return ui.notifications.error(\"Actor no encontrado\");\n\n        // Generar opciones SOLO con las habilidades listadas\n        let habilidadesOptions = Object.entries(habilidades)\n          .map(([key, nombre]) => `<option value=\"${key}\">${nombre}</option>`)\n          .join(\"\");\n\n        // Paso 3: mostrar di√°logo de habilidades\n        new Dialog({\n          title: `Solicitar tirada: ${actor.name}`,\n          content: `<p><b>Selecciona la habilidad:</b></p>\n                    <select id=\"habilidad\">${habilidadesOptions}</select>`,\n          buttons: {\n            enviar: {\n              label: \"Enviar Solicitud\",\n              callback: async html2 => {\n                const habilidad = html2.find(\"#habilidad\").val();\n\n                // Buscar jugador con permiso OWNER\n                let player = game.users.players.find(u => actor.testUserPermission(u, OWNER_PERMISSION_LEVEL));\n                if (!player) return ui.notifications.error(\"No se encontr√≥ jugador que controle este personaje.\");\n\n                // Mensaje privado con bot√≥n\n                const chatContent = `\n                  <p><b>${game.user.name}</b> te solicita una tirada de <b>${habilidades[habilidad]}</b> para <b>${actor.name}</b>.</p>\n                  <button class=\"roll-solicitud\" data-actor-id=\"${actor.id}\" data-skill=\"${habilidad}\">üé≤ Lanzar Tirada</button>\n                `;\n\n                await ChatMessage.create({\n                  user: player.id,\n                  whisper: [player.id],\n                  speaker: { alias: \"Solicitud de Tirada\" },\n                  content: chatContent\n                });\n\n                ui.notifications.info(`Solicitud enviada a ${player.name}`);\n              }\n            }\n          }\n        }).render(true);\n      }\n    }\n  }\n}).render(true);","folder":null,"sort":0,"ownership":{"default":0},"flags":{"exportSource":{"world":"vinculosyjur-69b5b203","system":"cosmere-rpg","coreVersion":"12.343","systemVersion":"1.0.1"}},"_id":"OHzWpcVmcfaHsk4z"}
{"name":"Unarmed Strike","type":"script","author":"6cxUP4dSannVjU9o","img":"modules/JB2A_DnD5e/Library/Generic/Weapon_Attacks/Melee/GreatClub01_01_Regular_White_Thumb.webp","scope":"global","command":"let selectedToken = canvas.tokens.controlled[0]; // First selected token\nlet targets = Array.from(game.user.targets); // Array of targeted tokens\n\nfor(let target of targets){\n/*new Sequence()\n    .effect()\n        .atLocation(selectedToken)\n        .stretchTo(target)\n        .file(\"jb2a.unarmed_strike.physical.02.blue\")\n        .repeats(3, 200, 300)\n        .randomizeMirrorY()\n    .play();*/\n\n\nnew Sequence()\n    .effect()\n        .file(\"jb2a.club.melee.01.white\") //Replace the text between quotation marks.\n        .atLocation(selectedToken)\n        .stretchTo(target)  \n        .repeats(3, 200, 300)\n        .randomizeMirrorY()\n.delay(1000)\n    \n    .play();\n}","folder":null,"sort":0,"ownership":{"default":0},"flags":{},"_id":"QSbK84EwO8jsXRt3"}
{"name":"Reducir Foco","type":"script","author":"6cxUP4dSannVjU9o","img":"icons/skills/wounds/anatomy-organ-brain-pink-red.webp","scope":"global","command":"// Valor a modificar (+4 para sumar, -4 para restar)\nconst delta = -1;\n\n// Verifica que hay un token seleccionado\nconst token = canvas.tokens.controlled[0];\nif (!token) {\n  ui.notifications.warn(\"Debes seleccionar un token.\");\n  return;\n}\n\nconst actor = token.actor;\n\n// Salud actual y m√°xima\nconst currHP = actor.system.resources.foc.value;\nconst maxHP = actor.system.resources.foc.max.value; // Si usas el override como m√°ximo\n\n// Calcula nueva salud\nconst newHP = Math.min(Math.max(currHP + delta, 0), maxHP);\n\n// Actualiza el valor de salud\nactor.update({ \"system.resources.foc.value\": newHP });\n\nui.notifications.info(`Foco actualizado a ${newHP}.`);\n\n\n\n\n\nnew Sequence()\n    .effect()\n        .file(\"jb2a.flurry_of_blows\")\n        .atLocation(canvas.tokens.controlled[0])\n        .scaleToObject(3)\n        .belowTokens()\n        .fadeIn(1500, {ease: \"easeOutCubic\", delay: 50})\n        .fadeOut(1500)\n        .rotateIn(90, 2500, {ease: \"easeInOutCubic\"})\n        .rotateOut(350, 1500, {ease: \"easeInCubic\"})\n        .scaleIn(2, 2500, {ease: \"easeInOutCubic\"})\n        .scaleOut(0, 1500, {ease: \"easeInCubic\"})\n    .play()","folder":null,"sort":0,"ownership":{"default":0},"flags":{},"_id":"ViwtbiTGShaoQNML"}
{"name":"Longspear Strike","type":"script","author":"6cxUP4dSannVjU9o","img":"modules/JB2A_DnD5e/Library/Generic/Weapon_Attacks/Melee/Legacy/Spear01_01_Regular_White_Thumb.webp","scope":"global","command":"let selectedToken = canvas.tokens.controlled[0]; // First selected token\nlet targets = Array.from(game.user.targets); // Array of targeted tokens\n\nfor(let target of targets){\n/*new Sequence()\n    .effect()\n        .atLocation(selectedToken)\n        .stretchTo(target)\n        .file(\"jb2a.spear.melee.01.white\")\n        .repeats(3, 200, 300)\n        .randomizeMirrorY()\n    .play();*/\n\n\nnew Sequence()\n    .effect()\n        .file(\"jb2a.spear.melee.01.white\") //Replace the text between quotation marks.\n        .atLocation(selectedToken)\n        .stretchTo(target)  \n        .repeats(3, 200, 300)\n        .randomizeMirrorY()\n\t\t\t.delay(1000)\n\t.sound()\n        .file(\"psfx.weapon-attacks.spear.v1\")\n    \n    .play();\n}","folder":null,"sort":0,"ownership":{"default":0},"flags":{},"_id":"Xsza2APBB4GYmmIq"}
{"name":"Reducir Salud","type":"script","author":"6cxUP4dSannVjU9o","img":"icons/svg/degen.svg","scope":"global","command":"// Valor a modificar (+4 para sumar, -4 para restar)\nconst delta = -1;\n\n// Verifica que hay un token seleccionado\nconst token = canvas.tokens.controlled[0];\nif (!token) {\n  ui.notifications.warn(\"Debes seleccionar un token.\");\n  return;\n}\n\nconst actor = token.actor;\n\n// Salud actual y m√°xima\nconst currHP = actor.system.resources.hea.value;\nconst maxHP = actor.system.resources.hea.max.value; \n\n// Calcula nueva salud\nconst newHP = Math.min(Math.max(currHP + delta, 0), maxHP);\n\n// Actualiza el valor de salud\nactor.update({ \"system.resources.hea.value\": newHP });\n\nui.notifications.info(`Salud actualizada a ${newHP}.`);\n\nnew Sequence()\n    .effect()\n        .file(\"modules/JB2A_DnD5e/Library/Generic/Healing/HealingAbility_02_Regular_GreenOrange_Loop_600x600.webm\")\n        .atLocation(canvas.tokens.controlled[0])\n        .scaleToObject(3)\n        .belowTokens()\n        .fadeIn(1500, {ease: \"easeOutCubic\", delay: 50})\n        .fadeOut(1500)\n        .rotateIn(90, 2500, {ease: \"easeInOutCubic\"})\n        .rotateOut(350, 1500, {ease: \"easeInCubic\"})\n        .scaleIn(2, 2500, {ease: \"easeInOutCubic\"})\n        .scaleOut(0, 1500, {ease: \"easeInCubic\"})\n    .play()","folder":null,"sort":0,"ownership":{"default":0},"flags":{},"_id":"aPHfJqQlm7EKoGyN"}
{"name":"Teleport","type":"script","author":"6cxUP4dSannVjU9o","img":"icons/svg/daze.svg","scope":"global","command":"let position = await Sequencer.Crosshair.show({\n    size: 1,\n    gridHighlight: false,\n    label: {\n        text: \"Teleport to\",\n    }\n}, { show: async (crosshair) => {\n\n    new Sequence()\n        .effect()\n            .from(token)\n            .attachTo(crosshair)\n            .persist()\n            .opacity(0.5)\n        .play();\n\n}})\n\nif(!position){\n    return;\n}\n\nnew Sequence()\n    .effect()\n        .from(token)\n        .fadeIn(50)\n        .duration(550)\n        .fadeOut(250)\n        .filter(\"Blur\")\n        .elevation(0)\n    .effect()\n        .file(\"jb2a.chain_lightning.secondary.blue\")\n        .atLocation(token)\n        .stretchTo(position)\n        .elevation(0)\n    .wait(100)\n    .animation()\n        .on(token)\n        .teleportTo(position)\n        .snapToGrid()\n        .waitUntilFinished()\n    .effect()\n        .file(\"jb2a.static_electricity.03.blue\")\n        .atLocation(token)\n        .scaleToObject()\n    .play();","folder":null,"sort":0,"ownership":{"default":0},"flags":{},"_id":"bEpngKnkXvyYyriw"}
{"name":"Knife","type":"script","author":"6cxUP4dSannVjU9o","img":"modules/JB2A_DnD5e/Library/Generic/Weapon_Attacks/Melee/Group01/MeleeAttack01_ButterflySword01_Thumb.webp","scope":"global","command":"let selectedToken = canvas.tokens.controlled[0]; // First selected token\nlet targets = Array.from(game.user.targets); // Array of targeted tokens\n\nfor(let target of targets){\n/*new Sequence()\n    .effect()\n        .atLocation(selectedToken)\n        .stretchTo(target)\n        .file(\"jb2a.dagger.melee.02.white\")\n        .repeats(3, 200, 300)\n        .randomizeMirrorY()\n    .play();*/\n\n\nnew Sequence()\n    .effect()\n        .file(\"jb2a.dagger.melee.02.white\") //Replace the text between quotation marks.\n        .atLocation(selectedToken)\n        .stretchTo(target)  \n        .repeats(3, 200, 300)\n        .randomizeMirrorY()\n    \n    .play();\n}","folder":null,"sort":0,"ownership":{"default":0},"flags":{},"_id":"hIqhA14oO23gtyJJ"}
{"name":"Hook Critical FAilure","type":"script","author":"6cxUP4dSannVjU9o","img":"icons/svg/dice-target.svg","scope":"global","command":"Hooks.on(\"diceSoNiceRollComplete\", (messageId) => {\n  const msg = game.messages.get(messageId);\n  if (!msg?.isRoll) return;\n\n  // Analiza todos los rolls del mensaje\n  for (const roll of msg.rolls) {\n    // Filtra solo dados (terms) de tipo Die\n    for (const term of roll.terms) {\n      if (term instanceof Die && term.faces === 20) { // Solo d20\n        for (const result of term.results) {\n          if (result.result === 1) {\n            // Aqu√≠ va tu reacci√≥n: animaci√≥n, efecto, etc\n            ui.notifications.info(\"¬°Fallo cr√≠tico detectado! üé≤\");\n            \nconst center = {\n  x: canvas.scene.width / 2,\n  y: canvas.scene.height / 2\n};\n\nnew Sequence()\n    .effect()\n        .file(\"modules/JB2A_DnD5e/Library/Generic/UI/CriticalMiss_03_Red_200x200.webm\")\n        .atLocation(center).scale(5)\n    .play()\n            return; // Sale al detectar el primero\n          }\n        }\n      }\n    }\n  }\n});","folder":null,"sort":0,"ownership":{"default":0},"flags":{},"_id":"mSA2KpnWle0X6E6m"}
{"name":"Send message","type":"script","author":"6cxUP4dSannVjU9o","img":"icons/svg/wall-direction.svg","scope":"global","command":"// Macro: Selecci√≥n de usuario y env√≠o de mensaje privado\n// Dev: pensado para usarlo como GM\n\n// Lista de usuarios jugadores (puedes incluir tambi√©n el GM si quieres, quitando el .players)\nlet usuarios = game.users.players.map(u => `<option value=\"${u.id}\">${u.name}</option>`).join(\"\");\n\n// Di√°logo para elegir usuario y escribir mensaje\nlet content = `\n<p><b>Selecciona el usuario:</b></p>\n<select id=\"usuario\">${usuarios}</select>\n<p><b>Mensaje:</b></p>\n<textarea id=\"mensaje\" rows=\"4\" style=\"width:100%;resize:none;\"></textarea>\n`;\n\nnew Dialog({\n  title: \"Enviar mensaje privado\",\n  content: content,\n  buttons: {\n    enviar: {\n      icon: '<i class=\"fas fa-paper-plane\"></i>',\n      label: \"Enviar\",\n      callback: async html => {\n        const userId = html.find(\"#usuario\").val();\n        const mensaje = html.find(\"#mensaje\").val().trim();\n        const jugador = game.users.get(userId);\n\n        if (!jugador) {\n          ui.notifications.error(\"Usuario no encontrado.\");\n          return;\n        }\n\n        if (!mensaje) {\n          ui.notifications.warn(\"No puedes enviar un mensaje vac√≠o.\");\n          return;\n        }\n\n        // Crear mensaje privado (whisper) solo para ese jugador\n        await ChatMessage.create({\n          user: game.user.id, // el usuario que lo env√≠a (t√∫)\n          whisper: [jugador.id],\n          speaker: { alias: game.user.name },\n          content: mensaje\n        });\n\n        ui.notifications.info(`Mensaje privado enviado a ${jugador.name}`);\n      }\n    },\n    cancelar: {\n      icon: '<i class=\"fas fa-times\"></i>',\n      label: \"Cancelar\"\n    }\n  },\n  default: \"enviar\"\n}).render(true);","folder":null,"sort":0,"ownership":{"default":0},"flags":{},"_id":"wilsiRBC31LfydfP"}